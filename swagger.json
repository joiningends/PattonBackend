{
    "openapi": "3.0.0",
    "info": {
        "title": "RFQ Management System",
        "version": "1.0.0",
        "description": "API for managing RFQ's."
    },
    "servers": [
        {
            "url": "http://localhost:3000/api",
            "description": "Local server"
        }
    ],
    "paths": {
        "/users/register": {
            "post": {
                "summary": "Register a new user",
                "description": "Saves user data to the database.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "john_doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "1234567890"
                                    },
                                    "designation": {
                                        "type": "string",
                                        "example": "Software Engineer"
                                    },
                                    "department": {
                                        "type": "string",
                                        "example": "Engineering"
                                    }
                                },
                                "required": [
                                    "username",
                                    "email",
                                    "password",
                                    "phone"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Missing required fields or email already exists"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/": {
            "get": {
                "summary": "Fetch all users",
                "description": "Retrieves a list of all users.",
                "responses": {
                    "200": {
                        "description": "List of users fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User data fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/User"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "summary": "Fetch user by ID",
                "description": "Retrieves a user by their ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User data fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User data fetched successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No user found for the given ID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/edit/{id}": {
            "post": {
                "summary": "Edit user by ID",
                "description": "Updates user details by their ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "john_doe_updated"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "0987654321"
                                    },
                                    "designation": {
                                        "type": "string",
                                        "example": "Senior Software Engineer"
                                    },
                                    "department": {
                                        "type": "string",
                                        "example": "Engineering"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - User ID is required"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/status/{id}": {
            "post": {
                "summary": "Enable or disable user by ID",
                "description": "Updates the status of a user (enable/disable) by their ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    }
                                },
                                "required": [
                                    "status"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User disabled successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - User ID or status code is required"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/users/delete/{id}": {
            "get": {
                "summary": "Delete user by ID",
                "description": "Deletes a user by their ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User deleted successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/User"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - User ID is required"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/pages/save": {
            "post": {
                "summary": "Save page data",
                "description": "Creates a new page with the provided details.",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "pagename": {
                                        "type": "string",
                                        "example": "Home Page"
                                    },
                                    "context": {
                                        "type": "string",
                                        "example": "This is the home page content."
                                    }
                                },
                                "required": [
                                    "pagename"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Page created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Page created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Page"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Page name is required or already exists"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/pages/": {
            "get": {
                "summary": "Fetch all pages",
                "description": "Retrieves a list of all pages.",
                "responses": {
                    "200": {
                        "description": "List of pages fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Page data fetched successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Page"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No data found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/pages/{id}": {
            "get": {
                "summary": "Fetch page by ID",
                "description": "Retrieves a page by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page data fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Page data fetched successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Page"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No page found for the given ID"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/pages/edit/{id}": {
            "post": {
                "summary": "Edit page by ID",
                "description": "Updates page details by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "pagename": {
                                        "type": "string",
                                        "example": "Updated Home Page"
                                    },
                                    "context": {
                                        "type": "string",
                                        "example": "Updated home page content."
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Page updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Page updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Page"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Page ID is required"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/pages/status/{id}": {
            "post": {
                "summary": "Enable or disable page by ID",
                "description": "Updates the status of a page (enable/disable) by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "status": {
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ],
                                        "example": 1
                                    }
                                },
                                "required": [
                                    "status"
                                ]
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Page status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Page status updated successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Page"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Page ID or status code is required"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/pages/delete/{id}": {
            "get": {
                "summary": "Delete page by ID",
                "description": "Deletes a page by its ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Page deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Page deleted successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Page ID is required"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "username": {
                        "type": "string",
                        "example": "john_doe"
                    },
                    "email": {
                        "type": "string",
                        "example": "john.doe@example.com"
                    },
                    "phone": {
                        "type": "string",
                        "example": "1234567890"
                    },
                    "designation": {
                        "type": "string",
                        "example": "Software Engineer"
                    },
                    "department": {
                        "type": "string",
                        "example": "Engineering"
                    },
                    "status": {
                        "type": "boolean",
                        "example": true
                    }
                }
            },
            "Page": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "pagename": {
                        "type": "string",
                        "example": "Home Page"
                    },
                    "context": {
                        "type": "string",
                        "example": "This is the home page content."
                    },
                    "status": {
                        "type": "boolean",
                        "example": true
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:00:00Z"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2023-10-01T12:00:00Z"
                    }
                }
            }
        }
    }
}